/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * MilleFiori implementation : © <Your name here> <Your email address here>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * millefiori.css
 *
 * MilleFiori stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (millefiori_millefiori.tpl), and to HTML elements you create dynamically
    (in millefiori.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/


/* Note: you must not use any @import directive */


/********* You can start writing your CSS below this line: **********/


/*
    Example of CSS sprites (a black token and a white token, 20x20px each, embedded in the same "tokens.png" 40x20px image):

    .white_token {
        background-image: url('img/tokens.png');
        background-position: 0px 0px;
    }
    .black_token {
        background-image: url('img/tokens.png');
        background-position: -20px 0px;
    }
    .token {
        width: 20px;
        height: 20px;
        background-repeat: none;
    }
*/

#board {
    width: 868px;
    height: 872px;
    background-image: url('img/board.jpg');
    position: relative;
 }
 .playertablecard {
    display: inline-block;
    position: relative;
    margin-top: 5px;
    width: 72px;
    height: 96px;
    background-image: url('img/cards.jpg'); /* temp hack to see it */
}
.limited_hand {
    width: 500px;
}
.single_card_hand {
    width: 200px;
}
.field {
    width: 43px;
    height: 50px;
    opacity: 0.4;
    position: absolute;
    background-color: rgb(90, 90, 90);
    clip-path: polygon(50% 0%, 0% 50%, 50% 100%, 100% 50%);
}
.token {
    width: 30px;
    height: 40px;
    position: absolute;
    opacity: 0.4;
}
.token0 {
    clip-path: polygon(0% 30%, 100% 100%, 0% 100%);
}
.token1 {
    clip-path: polygon(30% 0%, 0% 100%, 50% 70%);
}
.token2 {
    clip-path: polygon(100% 0%, 100% 100%, 30% 100%);
}
.token3 {
    clip-path: polygon(0% 0%, 100% 0%, 50% 100%);
}
.selectable {
    animation: blink-animation 1s steps(5, start) infinite;
    -webkit-animation: blink-animation 1s steps(5, start) infinite;
  }
@keyframes blink-animation {
    to {
      visibility: hidden;
    }
}
 @-webkit-keyframes blink-animation {
    to {
      visibility: hidden;
    }
}


